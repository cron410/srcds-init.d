#!/bin/bash
# Source Dedicated Server Init Script
# /etc/init.d/****
# set perms to 755
# Derived from script here: http://blog.bigdinosaur.org/serving-minecraft-on-ubuntu/
# and here: http://forums.srcds.com/viewtopic/5835/3

  ### BEGIN INIT INFO
  # Provides:   srcds
  # Required-Start: $local_fs $remote_fs
  # Required-Stop:  $local_fs $remote_fs
  # Should-Start:   $network
  # Should-Stop:    $network
  # Default-Start:  2 3 4 5
  # Default-Stop:   0 1 6
  # Short-Description:    srcds server
  # Description:    Starts the Source Dedicated Server
  ### END INIT INFO

## Game options
IP="game.domain.com"				# IP or DNS name of the server
PORT="27015"                               	# Port number
MAP="csp_aztec"                           	# Initial map to start
GAME="cspromod"					# Game type (tf|cstrike|valve|hl2mp|cspromod)
PLAYERS="24"                       	        # Maximum number of players
INSTANCE="screen -dmS"				# Wrapper for server instance

## Server options
TITLE="CS:Promod"                           # Human-readable name. anything you want.
USERNAME="css"                              # Linux username to run under.
NAME="$USERNAME-$PORT" ## MUST BE UNIQUE!   # Session name for "screen" wrapper. 
DAEMON="./srcds_run"                        # The server daemon or executable.
STEAM="/home/$USER/sourceds/orangebox"      # Steam installation
STEAMBIN="/home/$USER/sourceds"             # Steam binary file. (include the actual file in this path?)
CFG="server.cfg"                            # specify server.cfg for multiple servers of the same game in the same dir.


## Server options string
# OPTS="-game $GAME +hostname \"$CLIENT\" +map $MAP +ip $IP -port $PORT \
#    -autoupdate +maxplayers $PLAYERS

OPTS="-game $GAME +map $MAP -port $PORT +maxplayers $PLAYERS -autoupdate -steambin $STEAMBIN +exec $CFG"

ME=`whoami`
as_user() {
  if [[ "$ME" == "$USERNAME" ]] ; then
    bash -c "$1"
  else
    su - $USERNAME -c "$1"
  fi
}

service_start() {
  if pgrep -f $NAME > /dev/null
  then
    echo "$TITLE is already running!"
  else
    echo "Starting $TITLE..."
    as_user "cd $STEAM && $INSTANCE $NAME $DAEMON $OPTS"
    sleep 7
    if pgrep -f $NAME > /dev/null
        then
          echo "OK"
        else
          echo "Could not start $TITLE."
    fi
fi
}

service_stop() {
if pgrep -f $NAME > /dev/null
  then
    echo "Stopping $TITLE..."
    screen -S $NAME -X quit
    sleep 3
    if pgrep -f $NAME > /dev/null
      then
        echo "ERROR: $TITLE was not stopped."
      else
        echo "OK"
    fi
  else
    echo "$TITLE is not running."
fi
}

service_status() {
if pgrep -f $NAME > /dev/null
        then
                echo "$TITLE is running."
        else
                echo "$TITLE is NOT running."
fi
}

# start, stop, restart et. all
case "$1" in
        'start')
                service_start
        ;;
        'stop')
                service_stop
        ;;
        'restart')
                service_stop
                sleep 1
                service_start
        ;;
        'status')
                service_status
        ;;
        'update')
                service_update
        ;;
*)
  echo "Usage $0 start|stop|restart|status|update"
  exit 1
        ;;
esac

exit 0
